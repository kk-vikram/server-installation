version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: mlflow_postgres
    restart: always
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE}
    volumes:
      - ./db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER}"]
      interval: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: mlflow_minio
    restart: always
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./minio_data:/data
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    networks:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      retries: 5

  create_buckets:
    image: minio/mc
    container_name: mlflow_create_buckets
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c '
      sleep 10;
      mc alias set s3 http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      mc mb s3/${MLFLOW_BUCKET_NAME} || echo "Bucket exists";
      mc policy set download s3/${MLFLOW_BUCKET_NAME};
      exit 0;'
    networks:
      - backend

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow_server
    restart: always
    depends_on:
      - postgres
      - minio
      - create_buckets
    ports:
      - "${MLFLOW_PORT}:5000"
    networks:
      - frontend
      - backend
    environment:
      AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      MLFLOW_S3_IGNORE_TLS: true
    command: >
      mlflow server
      --backend-store-uri postgresql+psycopg2://${PG_USER}:${PG_PASSWORD}@postgres:${PG_PORT}/${PG_DATABASE}
      --default-artifact-root s3://${MLFLOW_BUCKET_NAME}
      --host 0.0.0.0
      --port 5000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      retries: 5

volumes:
  db_data:
  minio_data:

networks:
  frontend:
  backend:


